<?php

// 問題 5:トレイトの使用
//PHPにおいて、トレイト（trait）はクラスに特定のメソッドを再利用可能な形で提供するために使用されます。
//Loggerというトレイトがあり、これにはlogというメソッドが定義されているとします。
//logメソッドは、引数として受け取ったメッセージをログとして出力する機能を持っています。
//
//あなたのタスクは、Loggerトレイトを使用して、FileクラスとUserクラスの両方にログ出力機能を提供することです。
//両クラスはlogメソッドを使用して、特定のアクション（例: ファイルの保存、ユーザー情報の更新）が行われた際に
//メッセージをログとして出力する必要があります。
//
//Loggerトレイトを定義し、logメソッドを実装してください。
//LoggerトレイトをFileクラスとUserクラスで使用し、それぞれのクラスで特定のアクションが行われた際に
//ログメッセージを出力する例を示してください。

//=============================================================
// インターフェイス定義 -> 抽象メソッド（オーバーライドしろよ用）を定義するだけ
//=============================================================

interface Ilog{
    function log($msg);
}


//=============================================================
// トレイト定義 -> インターフェイスのメソッドをオーバーライドしますよ的な
//=============================================================

trait Logger{
    public function log($msg){
        echo $msg . '<br />';
    }
}

//=============================================================
// クラス
//=============================================================

// Fileクラス
class File implements Ilog{
    // トレイト呼び出し
    use Logger;
    // トレイトで定義したメソッドを再利用
    public function save(){
        $this->log('ファイルを保存しました！');
    }
}

// Userクラス
class User implements Ilog{
    use Logger;

    public function update(){
        $this->log('ユーザー情報を更新しました！');
    }
}

//=============================================================
// インスタンス化
//=============================================================

$file = new File();
$user = new User();

//=============================================================
// 処理
//=============================================================

// 特定の処理が行われたテイで。。
$file->save();
$user->update();


//　出力結果：

//ファイルを保存しました！
//ユーザー情報を更新しました！